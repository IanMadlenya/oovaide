<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
<!-- DC Blaha - 6/8/2009 -->



<link rel="stylesheet" type="text/css" href="../style.css"><!--#include virtual="../menu.html" --></head><body><div class="content">

<h2>OOVCDE Features</h2>

Created: July 13, 2013
Last update: Feb 8, 2014

<p>
<img src="OovLogo.png">

</p><h2>Features</h2>
<h3>General</h3>
<ul>
	<li>C++ build system, editor and diagram tool.<br>
</li>
  <li>Generates class, function relationship and component diagrams automatically for C++ files.</li>
  <li>The build tool is a command line utility that is invoked from the GUI.<br>
  </li>


	<li>Works under Windows or Linux.</li>
	<li>Uses LLVM/CLang to parse C++ source files.</li>
	<li>Uses GTK to display.</li>
</ul>

<h3>Projects</h3>
<ul>
	<li>New projects can be created by selecting the top level directory of the
	source file tree.  The output directory of the project is specified so that
	all of the C++ files are parsed saved in compressed format in this
	directory.</li>
	<li>An existing project can be opened by specifying the previously saved
	output directory, and the compressed files are read and updated if
	any C++ source files have been altered.</li>
	<li>When a project is open, the class list displays found classes of
	all parsed source files.</li>
</ul>

<h3>C++ parsing</h3>
<ul>
	<li>The source directory is recursively parsed for all source and header
	files.</li>
	<li>The external include paths can be specified using external package references. Project include paths are found automatically.<br>
</li>
	<li>The compilation runs in the background ant the error results are displayed in a window.</li>
	<li>The output files contain</li>
		<ul>
		<li>inheritance relationships</li>
		<li>member variable relationships</li>
		<li>function members with function parameters, variable	definitions,
		conditionals and function calls</li>
		<li>source module names</li>
		<li>directory/component include path relationships</li>
		</ul>
</ul>

<h3>Class Diagram Modification</h3>
	<ul>
	<li>Selecting a class from the class list adds the class to the display
	with related classes to a preset depth. The classes are arranged using a
	genetic algorithm.</li>
	<li>The classes can be manually moved after the initial placement.</li>
	<li>New classes can be added by right clicking on a class, and a menu is
	displayed that allows adding classes that are related in various ways
	(child members, subclasses, etc.)</li>
	
  <li>The Edit/Preferences menu item can access drawing options to change
	the displayed information.</li>

	<li>Selecting the right click on a class, and choosing the Properties menu
	item can be used to change drawing properties for the selected class</li>
	</ul>

<h3>Class Diagram Display</h3>
	<ul>
	<li>Displays relations between classes.</li>
	<li>Optimizes drawings for the following</li>
		<ul>
		<li>preventing overlapping classes</li>
		<li>nodes with relations are closer</li>
		</ul>
	<li>Drawing options for the following</li>
		<ul>
		<li>display attributes</li>
		<li>display operations, operation parameters</li>
		<li>display types for attributes, function parameters</li>
		</ul>
	<li>Right clicking on a class allows viewing the source code using notepad
	on Windows.</li>
	<li>The drawing can be saved to SVG for futrher editing in a tool such
	as Inkscape.</li>
	</ul>

<h3>Sequence Diagram Modification</h3>
	<ul>
	<li>Right clicking on an operation allows expanding or collapsing function
	calls.</li>
	<li>Right clicking on a class allows removing the class and related
	operations.</li>
	</ul>

<h3>Sequence Diagram Display</h3>

	<ul>
	<li>When a class is selected in the class list, the operations will be updated
	in the operation list.</li>
	<li>Selecting an operation will create a new sequence diagram that will show
	relations between classes and functions.</li>
	</ul>

<h3>Component Diagram Display</h3>
<ul>
  <li>The component diagrams display the static relations between programs and libraries.<br>
  </li>
</ul>


	<h3>Journal</h3>
	<ul>
	<li>Modified drawings are saved in a journal list.</li>
	<li>Selecting a record in the journal will display the diagram, and the
	diagram can be modified and saved.</li>
	</ul>


<h3>Build System</h3>
	The goal of the build system is to have a simple and easy to use build system
	that uses GNU or Clang (Not MSVC) to build projects for Windows or Linux.
	See the user guide for a complete description of the build system.<br>
<h3>Editor</h3>
C++ code editor with syntax highlighting.<br>
<br>


</div></body></html>