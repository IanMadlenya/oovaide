<svg xmlns="http://www.w3.org/2000/svg" version="1.1"
  font-family="Arial, Helvetica, sans-serif" font-size="10.000000" 
  width="684" height="857">
<g  fill="#f5fff5" stroke="#000000" style="stroke-width:1">
<rect x="14" y="713" width="133" height="143" />
<line x1="14" y1="726" x2="147" y2="726" />
<polygon points="127,734 139,739 139,729 127,734 " style="fill:#ffffff" />
<polygon points="127,748 134,752 141,748 134,744 127,748 " style="fill:#ffffff" />
<polygon points="127,762 134,766 141,762 134,758 127,762 " style="fill:#000000" />
<polygon points="127,776 135,781 131,776 135,771 127,776 " style="fill:#ffffff" />
<circle cx="127" cy="790" r="5" style="fill:#ffffff" />
<circle cx="127" cy="804" r="5" style="fill:#ffffff" />
<circle cx="134" cy="804" r="2" style="fill:#ffffff" />
<circle cx="127" cy="818" r="5" style="fill:#ffffff" />
<circle cx="127" cy="818" r="2" style="fill:#ffffff" />
<circle cx="127" cy="832" r="5" style="fill:#ffffff" />
<circle cx="127" cy="832" r="2" style="fill:#000000" />
<circle cx="127" cy="846" r="5" style="fill:#000000" />
<circle cx="127" cy="846" r="2" style="fill:#000000" />
</g>
<g stroke="none">
<text x="15" y="722">Relations Key</text>
<text x="15" y="736">Generalization</text>
<text x="15" y="750">Aggregation(reference)</text>
<text x="15" y="764">Composition(owned)</text>
<text x="15" y="778">Const</text>
<text x="15" y="792">Method Variable</text>
<text x="15" y="806">Method Parameter</text>
<text x="15" y="820">Public</text>
<text x="15" y="834">Protected</text>
<text x="15" y="848">Private</text>
</g>
<g  fill="#f5fff5" stroke="#000000" style="stroke-width:1">
<rect x="12" y="10" width="418" height="359" />
<line x1="12" y1="31" x2="430" y2="31" />
<line x1="12" y1="115" x2="430" y2="115" />
</g>
<g stroke="none">
<text x="13" y="19">ModelData</text>
<text x="13" y="28">oovCommon</text>
<text x="13" y="40">+std::vector&lt;std::unique_ptr&lt;ModelType,std::default_delete&lt;ModelType&gt; &gt;,</text>
<text x="20" y="49">std::allocator&lt;std::unique_ptr&lt;ModelType,std::default_delete&lt;ModelType&gt;</text>
<text x="20" y="58"> &gt; &gt; &gt; mTypes</text>
<text x="13" y="67">+std::vector&lt;std::unique_ptr&lt;ModelAssociation,std::default_delete&lt;ModelAssociatio</text>
<text x="20" y="76">n&gt; &gt;,std::allocator&lt;std::unique_ptr&lt;ModelAssociation,std::default_delete&lt;</text>
<text x="20" y="85">ModelAssociation&gt; &gt; &gt; &gt; mAssociations</text>
<text x="13" y="94">+std::vector&lt;std::unique_ptr&lt;ModelModule,std::default_delete&lt;ModelModule&gt;</text>
<text x="20" y="103"> &gt;,std::allocator&lt;std::unique_ptr&lt;ModelModule,std::default_delete&lt;ModelModule&gt;</text>
<text x="20" y="112"> &gt; &gt; &gt; mModules</text>
<text x="13" y="124">+clear()</text>
<text x="13" y="133">+resolveModelIds()</text>
<text x="13" y="142">+isTypeReferencedByDefinedObjects(ModelType type)</text>
<text x="13" y="151">+addType(std::unique_ptr&lt;ModelType,std::default_delete&lt;ModelType&gt; &gt; type)</text>
<text x="13" y="160">+findModuleById(int id)</text>
<text x="13" y="169">+createOrGetTypeRef(OovStringRef typeName, eModelDataTypes otype)</text>
<text x="13" y="178">+createTypeRef(OovStringRef typeName, eModelDataTypes otype)</text>
<text x="13" y="187">+getTypeRef(OovStringRef typeName)</text>
<text x="13" y="196">+findType(OovStringRef typeName)</text>
<text x="13" y="205">+findType(OovStringRef typeName)</text>
<text x="13" y="214">+replaceType(ModelType existingType, ModelClassifier newType)</text>
<text x="13" y="223">+takeAttributes(ModelClassifier sourceType, ModelClassifier destType)</text>
<text x="13" y="232">+getRelatedTypeArgClasses(ModelType type, ConstModelClassifierVector classes)</text>
<text x="13" y="241">+getRelatedFuncInterfaceClasses(ModelClassifier type, ConstModelClassifierVector </text>
<text x="20" y="250">classes)</text>
<text x="13" y="259">+getRelatedFuncParamClasses(ModelClassifier type, ConstModelDeclClasses classes)</text>
<text x="13" y="268">+getRelatedBodyVarClasses(ModelClassifier type, ConstModelDeclClasses declclasses</text>
<text x="20" y="277">)</text>
<text x="13" y="286">+addBaseClasses(ModelClassifier type, ConstModelClassifierVector classes)</text>
<text x="13" y="295">+getBaseType(OovStringRef fullStr)</text>
<text x="13" y="304">-createDataType(eModelDataTypes type, string&lt;&lt;typedef&gt;&gt; id)</text>
<text x="13" y="313">-resolveStatements(TypeIdMap typeMap, ModelStatements stmt)</text>
<text x="13" y="322">-resolveDecl(TypeIdMap typeMap, ModelTypeRef decl)</text>
<text x="13" y="331">-isTypeReferencedByStatements(ModelStatements stmts, ModelType type)</text>
<text x="13" y="340">-dumpTypes()</text>
<text x="13" y="349">-replaceStatementType(ModelStatements stmts, ModelType existingType, ModelClassif</text>
<text x="20" y="358">ier newType)</text>
<text x="13" y="367">-eraseType(ModelType existingType)</text>
</g>
<g stroke="none" font-style="italic">
</g>
<g  fill="#f5fff5" stroke="#000000" style="stroke-width:1">
<rect x="194" y="401" width="237" height="44" />
<line x1="194" y1="440" x2="431" y2="440" />
<line x1="194" y1="443" x2="431" y2="443" />
</g>
<g stroke="none">
<text x="195" y="410">std::vector&lt;std::unique_ptr&lt;ModelType,std::</text>
<text x="195" y="419">  default_delete&lt;ModelType&gt; &gt;,std::allocator&lt;</text>
<text x="195" y="428">  std::unique_ptr&lt;ModelType,std::default_delete&lt;</text>
<text x="195" y="437">  ModelType&gt; &gt; &gt; &gt;</text>
</g>
<g stroke="none" font-style="italic">
</g>
<g  fill="#f5fff5" stroke="#000000" style="stroke-width:1">
<rect x="476" y="175" width="202" height="53" />
<line x1="476" y1="223" x2="678" y2="223" />
<line x1="476" y1="226" x2="678" y2="226" />
</g>
<g stroke="none">
<text x="477" y="184">std::vector&lt;std::unique_ptr&lt;ModelAssociat</text>
<text x="477" y="193">  ion,std::default_delete&lt;ModelAssociatio</text>
<text x="477" y="202">  n&gt; &gt;,std::allocator&lt;std::unique_ptr&lt;</text>
<text x="477" y="211">  ModelAssociation,std::default_delete&lt;</text>
<text x="477" y="220">  ModelAssociation&gt; &gt; &gt; &gt;</text>
</g>
<g stroke="none" font-style="italic">
</g>
<g  fill="#f5fff5" stroke="#000000" style="stroke-width:1">
<rect x="472" y="12" width="202" height="53" />
<line x1="472" y1="60" x2="674" y2="60" />
<line x1="472" y1="63" x2="674" y2="63" />
</g>
<g stroke="none">
<text x="473" y="21">std::vector&lt;std::unique_ptr&lt;ModelModule,</text>
<text x="473" y="30">  std::default_delete&lt;ModelModule&gt;</text>
<text x="473" y="39">   &gt;,std::allocator&lt;std::unique_ptr&lt;</text>
<text x="473" y="48">  ModelModule,std::default_delete&lt;</text>
<text x="473" y="57">  ModelModule&gt; &gt; &gt; &gt;</text>
</g>
<g stroke="none" font-style="italic">
</g>
<g  fill="#f5fff5" stroke="#000000" style="stroke-width:1">
<rect x="12" y="426" width="168" height="125" />
<line x1="12" y1="447" x2="180" y2="447" />
<line x1="12" y1="459" x2="180" y2="459" />
</g>
<g stroke="none">
<text x="13" y="435">ModelType</text>
<text x="13" y="444">oovCommon</text>
<text x="13" y="456">-eModelDataTypes mDataType</text>
<text x="13" y="468">+isTypedefType()</text>
<text x="13" y="477">+isTemplateDefType()</text>
<text x="13" y="486">+isTemplateUseType()</text>
<text x="13" y="495">+getClass()</text>
<text x="13" y="504">+getClass()</text>
<text x="13" y="513">+getClass(ModelType modelType)</text>
<text x="13" y="522">+getClass(ModelType modelType)</text>
<text x="13" y="531">+ModelType(OovStringRef name,</text>
<text x="20" y="540"> eModelDataTypes type)</text>
<text x="13" y="549">+getDataType()</text>
</g>
<g stroke="none" font-style="italic">
</g>
<g  fill="#f5fff5" stroke="#000000" style="stroke-width:1">
<rect x="477" y="244" width="198" height="179" />
<line x1="477" y1="265" x2="675" y2="265" />
<line x1="477" y1="313" x2="675" y2="313" />
</g>
<g stroke="none">
<text x="478" y="253">ModelAssociation</text>
<text x="478" y="262">oovCommon</text>
<text x="478" y="274">-int mChildModelId</text>
<text x="478" y="283">-int mParentModelId</text>
<text x="478" y="292">-ModelClassifier mChild</text>
<text x="478" y="301">-ModelClassifier mParent</text>
<text x="478" y="310">-Visibility mAccess</text>
<text x="478" y="322">+ModelAssociation(ModelClassifier child,</text>
<text x="485" y="331"> ModelClassifier parent, Visibility access)</text>
<text x="478" y="340">+setChildModelId(int id)</text>
<text x="478" y="349">+setParentModelId(int id)</text>
<text x="478" y="358">+getChildModelId()</text>
<text x="478" y="367">+getParentModelId()</text>
<text x="478" y="376">+getChild()</text>
<text x="478" y="385">+getParent()</text>
<text x="478" y="394">+setAccess(Visibility vis)</text>
<text x="478" y="403">+getAccess()</text>
<text x="478" y="412">+setChildClass(ModelClassifier cl)</text>
<text x="478" y="421">+setParentClass(ModelClassifier cl)</text>
</g>
<g stroke="none" font-style="italic">
</g>
<g  fill="#f5fff5" stroke="#000000" style="stroke-width:1">
<rect x="497" y="79" width="178" height="62" />
<line x1="497" y1="100" x2="675" y2="100" />
<line x1="497" y1="112" x2="675" y2="112" />
</g>
<g stroke="none">
<text x="498" y="88">ModelModule</text>
<text x="498" y="97">oovCommon</text>
<text x="498" y="109">+ModelModuleLineStats mLineStats</text>
<text x="498" y="121">+ModelModule()</text>
<text x="498" y="130">+setModulePath(OovStringRef str)</text>
<text x="498" y="139">+getModulePath()</text>
</g>
<g stroke="none" font-style="italic">
</g>
<g  fill="#f5fff5" stroke="#000000" style="stroke-width:1">
<rect x="267" y="463" width="416" height="386" />
<line x1="267" y1="484" x2="683" y2="484" />
<line x1="267" y1="568" x2="683" y2="568" />
</g>
<g stroke="none">
<text x="268" y="472">ModelClassifier</text>
<text x="268" y="481">oovCommon</text>
<text x="268" y="493">+size_t&lt;&lt;typedef&gt;&gt; NoIndex</text>
<text x="268" y="502">-std::vector&lt;std::unique_ptr&lt;ModelAttribute,std::default_delete&lt;ModelAttribute&gt;</text>
<text x="275" y="511"> &gt;,std::allocator&lt;std::unique_ptr&lt;ModelAttribute,std::default_delete&lt;ModelAttribute&gt;</text>
<text x="275" y="520"> &gt; &gt; &gt; mAttributes</text>
<text x="268" y="529">-std::vector&lt;std::unique_ptr&lt;ModelOperation,std::default_delete&lt;ModelOperation&gt;</text>
<text x="275" y="538"> &gt;,std::allocator&lt;std::unique_ptr&lt;ModelOperation,std::default_delete&lt;ModelOperation&gt;</text>
<text x="275" y="547"> &gt; &gt; &gt; mOperations</text>
<text x="268" y="556">-ModelModule mModule</text>
<text x="268" y="565">-unsigned int mLineNum</text>
<text x="268" y="577">+clearOperations()</text>
<text x="268" y="586">+clearAttributes()</text>
<text x="268" y="595">+addAttribute(string&lt;&lt;typedef&gt;&gt; name, ModelType attrType, Visibility scope)</text>
<text x="268" y="604">+addOperation(string&lt;&lt;typedef&gt;&gt; name, Visibility access, bool isConst, bool isVirtual)</text>
<text x="268" y="613">+removeOperation(ModelOperation oper)</text>
<text x="268" y="622">+replaceOperation(ModelOperation operToReplace, std::unique_ptr&lt;ModelOperation,</text>
<text x="275" y="631">std::default_delete&lt;ModelOperation&gt; &gt; newOper)</text>
<text x="268" y="640">+eraseAttribute(ModelAttribute attr)</text>
<text x="268" y="649">+eraseOperation(ModelOperation oper)</text>
<text x="268" y="658">+getAttributeIndex(string&lt;&lt;typedef&gt;&gt; name)</text>
<text x="268" y="667">+getAttribute(string&lt;&lt;typedef&gt;&gt; name)</text>
<text x="268" y="676">+findExactMatchingOperationIndex(ModelOperation op)</text>
<text x="268" y="685">+findExactMatchingOperation(ModelOperation op)</text>
<text x="268" y="694">+getOperation(OovStringRef name, bool isConst)</text>
<text x="268" y="703">+getOperationIndex(OovStringRef name, bool isConst)</text>
<text x="268" y="712">+getOperationAnyConst(string&lt;&lt;typedef&gt;&gt; name, bool isConst)</text>
<text x="268" y="721">+isDefinition()</text>
<text x="268" y="730">+ModelClassifier(OovStringRef name)</text>
<text x="268" y="739">+addAttribute(std::unique_ptr&lt;ModelAttribute,std::default_delete&lt;ModelAttribute&gt;</text>
<text x="275" y="748"> &gt; attr)</text>
<text x="268" y="757">+addOperation(std::unique_ptr&lt;ModelOperation,std::default_delete&lt;ModelOperation&gt;</text>
<text x="275" y="766"> &gt; oper)</text>
<text x="268" y="775">+getOperation(OovStringRef name, bool isConst)</text>
<text x="268" y="784">+getAttributes()</text>
<text x="268" y="793">+getAttributes()</text>
<text x="268" y="802">+getOperations()</text>
<text x="268" y="811">+getOperations()</text>
<text x="268" y="820">+setModule(ModelModule module)</text>
<text x="268" y="829">+getModule()</text>
<text x="268" y="838">+setLineNum(unsigned int lineNum)</text>
<text x="268" y="847">+getLineNum()</text>
</g>
<g stroke="none" font-style="italic">
</g>
<g  fill="#f5fff5" stroke="#000000" style="stroke-width:1">
<rect x="36" y="612" width="172" height="89" />
<line x1="36" y1="633" x2="208" y2="633" />
<line x1="36" y1="654" x2="208" y2="654" />
</g>
<g stroke="none">
<text x="37" y="621">ModelObject</text>
<text x="37" y="630">oovCommon</text>
<text x="37" y="642">-OovString mName</text>
<text x="37" y="651">-int mModelId</text>
<text x="37" y="663">+ModelObject(OovStringRef name)</text>
<text x="37" y="672">+getName()</text>
<text x="37" y="681">+setName(OovStringRef name)</text>
<text x="37" y="690">+setModelId(int id)</text>
<text x="37" y="699">+getModelId()</text>
</g>
<g stroke="none" font-style="italic">
</g>
<g  fill="#f5f5ff" stroke="#000000" style="stroke-width:1">
<line x1="290" y1="368" x2="304" y2="401" />
<circle cx="295" cy="380" r="5" style="fill:#ffffff" />
<circle cx="301" cy="395" r="5" style="fill:#ffffff" />
<circle cx="301" cy="395" r="2" style="fill:#ffffff" />
<polygon points="290,368 289,376 295,380 297,373 290,368 " style="fill:#000000" />
<line x1="430" y1="196" x2="476" y2="198" />
<circle cx="443" cy="196" r="5" style="fill:#ffffff" />
<circle cx="459" cy="197" r="5" style="fill:#ffffff" />
<circle cx="459" cy="197" r="2" style="fill:#ffffff" />
<polygon points="430,196 437,200 443,196 437,192 430,196 " style="fill:#000000" />
<line x1="430" y1="100" x2="513" y2="64" />
<circle cx="442" cy="94" r="5" style="fill:#ffffff" />
<circle cx="457" cy="88" r="5" style="fill:#ffffff" />
<circle cx="457" cy="88" r="2" style="fill:#ffffff" />
<polygon points="430,100 438,101 442,95 435,93 430,100 " style="fill:#000000" />
<line x1="147" y1="368" x2="121" y2="426" />
<polygon points="147,368 139,372 146,371 149,377 147,368 " style="fill:#ffffff" />
<circle cx="141" cy="380" r="5" style="fill:#ffffff" />
<circle cx="138" cy="387" r="2" style="fill:#ffffff" />
<line x1="318" y1="368" x2="371" y2="463" />
<circle cx="324" cy="380" r="5" style="fill:#ffffff" />
<circle cx="328" cy="386" r="2" style="fill:#ffffff" />
<line x1="184" y1="368" x2="131" y2="612" />
<circle cx="181" cy="381" r="5" style="fill:#ffffff" />
<line x1="239" y1="445" x2="180" y2="463" style="stroke-dasharray: 4, 4 "/>
<line x1="239" y1="445" x2="180" y2="463" style="stroke-dasharray: 4, 4 "/>
<line x1="180" y1="463" x2="193" y2="464" />
<line x1="180" y1="463" x2="190" y2="455" />
<line x1="577" y1="227" x2="576" y2="244" style="stroke-dasharray: 4, 4 "/>
<line x1="577" y1="227" x2="576" y2="244" style="stroke-dasharray: 4, 4 "/>
<line x1="576" y1="244" x2="582" y2="232" />
<line x1="576" y1="244" x2="572" y2="231" />
<line x1="577" y1="64" x2="581" y2="79" style="stroke-dasharray: 4, 4 "/>
<line x1="577" y1="64" x2="581" y2="79" style="stroke-dasharray: 4, 4 "/>
<line x1="581" y1="79" x2="582" y2="66" />
<line x1="581" y1="79" x2="573" y2="68" />
<line x1="180" y1="525" x2="267" y2="564" />
<circle cx="207" cy="537" r="5" style="fill:#ffffff" />
<circle cx="207" cy="537" r="2" style="fill:#ffffff" />
<polygon points="180,525 189,535 193,525 180,525 " style="fill:#ffffff" />
<polygon points="267,564 263,556 264,563 258,566 267,564 " style="fill:#ffffff" />
<circle cx="254" cy="558" r="5" style="fill:#ffffff" />
<circle cx="247" cy="555" r="2" style="fill:#ffffff" />
<line x1="105" y1="550" x2="116" y2="612" />
<circle cx="107" cy="563" r="5" style="fill:#ffffff" />
<circle cx="110" cy="582" r="5" style="fill:#ffffff" />
<circle cx="110" cy="582" r="2" style="fill:#ffffff" />
<polygon points="116,612 119,599 109,601 116,612 " style="fill:#ffffff" />
<line x1="549" y1="422" x2="535" y2="463" />
<polygon points="549,422 541,427 548,425 551,431 549,422 " style="fill:#ffffff" />
<circle cx="544" cy="435" r="5" style="fill:#ffffff" />
<circle cx="542" cy="441" r="2" style="fill:#ffffff" />
<circle cx="539" cy="450" r="5" style="fill:#000000" />
<circle cx="539" cy="450" r="2" style="fill:#000000" />
<polygon points="549,422 543,427 545,435 550,430 549,422 " style="fill:#ffffff" />
<line x1="477" y1="403" x2="183" y2="612" />
<circle cx="465" cy="411" r="5" style="fill:#ffffff" />
<circle cx="207" cy="594" r="5" style="fill:#ffffff" />
<circle cx="207" cy="594" r="2" style="fill:#ffffff" />
<polygon points="183,612 196,609 190,601 183,612 " style="fill:#ffffff" />
<line x1="580" y1="141" x2="514" y2="463" />
<polygon points="514,463 521,457 514,460 510,454 514,463 " style="fill:#ffffff" />
<circle cx="516" cy="449" r="5" style="fill:#ffffff" />
<circle cx="518" cy="442" r="2" style="fill:#ffffff" />
<circle cx="520" cy="433" r="5" style="fill:#000000" />
<circle cx="520" cy="433" r="2" style="fill:#000000" />
<polygon points="514,463 519,457 516,450 512,455 514,463 " style="fill:#ffffff" />
<line x1="560" y1="141" x2="159" y2="612" />
<circle cx="550" cy="151" r="5" style="fill:#ffffff" />
<circle cx="178" cy="589" r="5" style="fill:#ffffff" />
<circle cx="178" cy="589" r="2" style="fill:#ffffff" />
<polygon points="159,612 171,606 163,599 159,612 " style="fill:#ffffff" />
<line x1="267" y1="656" x2="208" y2="656" />
<circle cx="253" cy="656" r="5" style="fill:#ffffff" />
</g>
</svg>