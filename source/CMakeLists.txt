# Generated by oovCMaker
cmake_minimum_required(VERSION 2.8)
project(Oovcde)
INCLUDE(FindPkgConfig)

set(OOVCDE_MAJOR_VERION 0)
set(OOVCDE_MINOR_VERION 1)
set(OOVCDE_PATCH_VERION 0)
set(OOVCDE_VERION
${OOVCDE_MAJOR_VERSION}.${OOVCDE_MINOR_VERSION}.${OOVCDE_PATCH_VERSION})

# Offer the user the choice of overriding the installation directories
set(INSTALL_LIB_DIR lib CACHE PATH "Installation directory for libraries")
set(INSTALL_BIN_DIR bin CACHE PATH "Installation directory for executables")
set(INSTALL_INCLUDE_DIR include CACHE PATH
   "Installation directory for header files")
if(WIN32 AND NOT CYGWIN)
   set(DEF_INSTALL_CMAKE_DIR CMake)
else()
   set(DEF_INSTALL_CMAKE_DIR lib/CMake/Oovcde)
endif()
set(INSTALL_CMAKE_DIR ${DEF_INSTALL_CMAKE_DIR} CACHE PATH
   "Installation directory for CMake files")

# Make relative paths absolute (needed later on)
foreach(p LIB BIN INCLUDE CMAKE)
   set(var INSTALL_${p}_DIR)
   if(NOT IS_ABSOLUTE "${${var}}")
      set(${var} "${CMAKE_INSTALL_PREFIX}/${${var}}")
   endif()
endforeach()

# External Packages
if(NOT WIN32)
# GTK
pkg_check_modules(GTK REQUIRED gtk+-3.0)
include_directories(${GTK_INCLUDE_DIRS})
link_directories(${GTK_LIBRARY_DIRS})
add_definitions(${GTK_CFLAGS_OTHER})
# LLVM
# pkg_check_modules(LLVM REQUIRED llvm)
include_directories(../../clang+llvm-3.4-x86_64/include)
cmake_policy(SET CMP0015 NEW)
link_directories(../../clang+llvm-3.4-x86_64/lib)
set(LLVM_LIBRARIES clang)
# include_directories(${LLVM_INCLUDE_DIRS})
# link_directories(${LLVM_LIBRARY_DIRS})
# add_definitions(${LLVM_CFLAGS_OTHER})
endif()

# set up include directories
include_directories(
   "${PROJECT_SOURCE_DIR}/oovCommon"
   "${PROJECT_SOURCE_DIR}/oovGuiCommon"
   )
#add_definitions(-std=c++11)
add_definitions(-std=c++0x)

# Add sub directories
add_subdirectory(oovBuilder)
add_subdirectory(oovCMaker)
add_subdirectory(oovCommon)
add_subdirectory(oovCppParser)
add_subdirectory(oovEdit)
add_subdirectory(oovGuiCommon)
add_subdirectory(oovcde)
# Add all targets to the build-tree export set
export(TARGETS  oovBuilder oovCMaker oovCommon oovCppParser oovEdit oovGuiCommon oovcde
   FILE "${PROJECT_BINARY_DIR}/OovcdeTargets.cmake")

# Export the package for use from the build-tree
# (this registers the build-tree with a global CMake-registry)
export(PACKAGE Oovcde)

# Create the OovcdeConfig.cmake and OovcdeConfigVersion files
file(RELATIVE_PATH REL_INCLUDE_DIR "${INSTALL_CMAKE_DIR}"
   "${INSTALL_INCLUDE_DIR}")
# for the build tree
set(CONF_INCLUDE_DIRS "${PROJECT_SOURCE_DIR}" "${PROJECT_BINARY_DIR}")
configure_file(OovcdeConfig.cmake.in
   "${PROJECT_BINARY_DIR}/OovcdeConfig.cmake" @ONLY)
# for the install tree
set(CONF_INCLUDE_DIRS "\${OOVCDE_CMAKE_DIR}/${REL_INCLUDE_DIR}")
configure_file(OovcdeConfig.cmake.in
   "${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/OovcdeConfig.cmake" @ONLY)
# for both
configure_file(OovcdeConfigVersion.cmake.in
   "${PROJECT_BINARY_DIR}/OovcdeConfigVersion.cmake" @ONLY)

# Install the OovcdeConfig.cmake and OovcdeConfigVersion.cmake
install(FILES
   "${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/OovcdeConfig.cmake"
   "${PROJECT_BINARY_DIR}/OovcdeConfigVersion.cmake"
DESTINATION "${INSTALL_CMAKE_DIR}" COMPONENT dev)

# Install the export set for use with the install-tree
install(EXPORT OovcdeTargets DESTINATION
   "${INSTALL_CMAKE_DIR}" COMPONENT dev)
