# Generated by oovCMaker
cmake_minimum_required(VERSION 2.8)
project(Oovaide)
INCLUDE(FindPkgConfig)

set(OOVAIDE_MAJOR_VERION 0)
set(OOVAIDE_MINOR_VERION 1)
set(OOVAIDE_PATCH_VERION 1)
set(OOVAIDE_VERION ${OOVAIDE_MAJOR_VERSION}.${OOVAIDE_MINOR_VERSION}.${OOVAIDE_PATCH_VERSION})

#set(CMAKE_INSTALL_PREFIX "/usr")

# Offer the user the choice of overriding the installation directories
set(INSTALL_LIB_DIR lib CACHE PATH "Installation directory for libraries")
set(INSTALL_BIN_DIR bin CACHE PATH "Installation directory for executables")
set(INSTALL_INCLUDE_DIR include CACHE PATH
   "Installation directory for header files")
if(WIN32 AND NOT CYGWIN)
   set(DEF_INSTALL_CMAKE_DIR CMake)
else()
   set(DEF_INSTALL_CMAKE_DIR lib/CMake/Oovaide)
endif()
set(INSTALL_CMAKE_DIR ${DEF_INSTALL_CMAKE_DIR} CACHE PATH
   "Installation directory for CMake files")

# Make relative paths absolute (needed later on)
foreach(p LIB BIN INCLUDE CMAKE)
   set(var INSTALL_${p}_DIR)
   if(NOT IS_ABSOLUTE "${${var}}")
      set(${var} "${CMAKE_INSTALL_PREFIX}/${${var}}")
   endif()
endforeach()

# External Packages
if(NOT WIN32)

# GTK
pkg_check_modules(GTK REQUIRED gtk+-3.0)
include_directories(${GTK_INCLUDE_DIRS})
link_directories(${GTK_LIBRARY_DIRS})
add_definitions(${GTK_CFLAGS_OTHER})

# DL - This is in libc6-dev package on Ubuntu
set(DL_LIBRARIES dl)

# LLVM - Neither LLVM or CLANG are in /usr/share/cmake*/Modules at least up to LLVM 3.6
# pkg_check_modules(CLANG REQUIRED libclang-dev)
# pkg_check_modules(LLVM REQUIRED llvm)
include_directories(/usr/lib/llvm-3.6/include)
cmake_policy(SET CMP0015 NEW)
link_directories(/usr/lib/llvm-3.6/lib)
set(LLVM_LIBRARIES clang)
# include_directories(${LLVM_INCLUDE_DIRS})
# link_directories(${LLVM_LIBRARY_DIRS})
# add_definitions(${LLVM_CFLAGS_OTHER})

endif()

# set up include directories
include_directories(
   "${PROJECT_SOURCE_DIR}/oovCommon"
   "${PROJECT_SOURCE_DIR}/oovGuiCommon"
   )
add_definitions(-std=c++11)
set(CMAKE_EXE_LINKER_FLAGS "-pthread -Wl,--no-as-needed")

# Add sub directories
add_subdirectory(ClangView)
add_subdirectory(oovaide)
add_subdirectory(oovBuilder)
add_subdirectory(oovCMaker)
add_subdirectory(oovCommon)
add_subdirectory(oovCovInstr)
add_subdirectory(oovCppParser)
add_subdirectory(oovDbWriter)
add_subdirectory(oovEdit)
add_subdirectory(oovGuiCommon)
add_subdirectory(oovJavaParser)
# Add all targets to the build-tree export set
export(TARGETS  ClangView oovaide oovBuilder oovCMaker oovCommon oovCovInstr oovCppParser oovDbWriter oovEdit oovGuiCommon
   FILE "${PROJECT_BINARY_DIR}/OovaideTargets.cmake")

# Set fpic for run time library code
set_property(TARGET oovCommon PROPERTY POSITION_INDEPENDENT_CODE TRUE)
set_property(TARGET oovDbWriter PROPERTY POSITION_INDEPENDENT_CODE TRUE)

# Export the package for use from the build-tree
# (this registers the build-tree with a global CMake-registry)
export(PACKAGE Oovaide)

# Create the OovaideConfig.cmake and OovaideConfigVersion files
file(RELATIVE_PATH REL_INCLUDE_DIR "${INSTALL_CMAKE_DIR}"
   "${INSTALL_INCLUDE_DIR}")
# for the build tree
set(CONF_INCLUDE_DIRS "${PROJECT_SOURCE_DIR}" "${PROJECT_BINARY_DIR}")
configure_file(OovaideConfig.cmake.in
   "${PROJECT_BINARY_DIR}/OovaideConfig.cmake" @ONLY)
# for the install tree
set(CONF_INCLUDE_DIRS "\${OOVAIDE_CMAKE_DIR}/${REL_INCLUDE_DIR}")
configure_file(OovaideConfig.cmake.in
   "${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/OovaideConfig.cmake" @ONLY)
# for both
configure_file(OovaideConfigVersion.cmake.in
   "${PROJECT_BINARY_DIR}/OovaideConfigVersion.cmake" @ONLY)

# Install the OovaideConfig.cmake and OovaideConfigVersion.cmake
install(FILES
   "${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/OovaideConfig.cmake"
   "${PROJECT_BINARY_DIR}/OovaideConfigVersion.cmake"
DESTINATION "${INSTALL_CMAKE_DIR}" COMPONENT dev)

# Copy some extra files to the share directory
install(FILES
   "${PROJECT_SOURCE_DIR}/bin/oovaideLayout.glade"
   "${PROJECT_SOURCE_DIR}/bin/oovEdit.glade"
   "${PROJECT_SOURCE_DIR}/bin/OovEdit.css"
   "${PROJECT_SOURCE_DIR}/bin/oovaide-allpkgs-win.txt"
   "${PROJECT_SOURCE_DIR}/bin/OovLogo.png"
   "${PROJECT_SOURCE_DIR}/bin/OovEditLogo.png"
DESTINATION "${INSTALL_BIN_DIR}" COMPONENT dev)

install(FILES
   "${PROJECT_SOURCE_DIR}/bin/data/AnalyzeButton.png"
   "${PROJECT_SOURCE_DIR}/bin/data/BinaryComponentsButton.png"
   "${PROJECT_SOURCE_DIR}/bin/data/BuildButton.png"
   "${PROJECT_SOURCE_DIR}/bin/data/ClassDiagramButton.png"
   "${PROJECT_SOURCE_DIR}/bin/data/IncludeDiagramButton.png"
   "${PROJECT_SOURCE_DIR}/bin/data/OperationDiagramButton.png"
   "${PROJECT_SOURCE_DIR}/bin/data/PortionDiagramButton.png"
   "${PROJECT_SOURCE_DIR}/bin/data/StepIntoButton.png"
   "${PROJECT_SOURCE_DIR}/bin/data/StepOverButton.png"
   "${PROJECT_SOURCE_DIR}/bin/data/ZoneDiagramButton.png"
DESTINATION "${INSTALL_BIN_DIR}/data" COMPONENT dev)

# Install the export set for use with the install-tree
install(EXPORT OovaideTargets DESTINATION
   "${INSTALL_CMAKE_DIR}" COMPONENT dev)

# Use dpkg -I x.deb to view contents of deb file
# Use dpkg -c x.deb to view viles of deb file
# Use dpkg -i x.deb to install the package from the deb file
# Use "sudo make package" to use cmake to build a deb file.set(CPACK_GENERATOR DEB)
# Building oovaide requires libclang-3.6-dev, but using analysis only requires libclang1
set(CPACK_GENERATOR "DEB")
set(CPACK_DEBIAN_PACKAGE_NAME oovaide)
set(CPACK_DEBIAN_PACKAGE_DESCRIPTION "Source code analysis tool for C++ and Java")
set(CPACK_DEBIAN_PACKAGE_MAINTAINER AnimatedB)
set(CPACK_DEBIAN_PACKAGE_DEPENDS "libclang1 (>=1.34.1), libgtk-3-0 (>=3.4.1)")
set(CPACK_DEBIAN_PACKAGE_SUGGESTS "sqlite, default-jdk")
set(CPACK_PACKAGE_VERSION_MAJOR ${OOVAIDE_MAJOR_VERION})
set(CPACK_PACKAGE_VERSION_Minor ${OOVAIDE_MINOR_VERION})
set(CPACK_PACKAGE_VERSION_Patch ${OOVAIDE_PATCH_VERION})
include(CPack)

