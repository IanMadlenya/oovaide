
Current Status - Version 0.2
--------------

Features
--------
	See the web site for a list of features.

Explanations
------------
	- If operations aren't shown for classes, use -x c++ for Clang.
	- If classes aren't showing relation to std::vector<>, use "-x c++" for Clang.
	- Analysis will run again if there are include path errors
	  (changing switches or files will rerun)


Missing Features
----------------
- General
	- Only 64 bit linux build is provided.
	- Code improvements: Use unique_ptr for model objects
	- Code improvements: Fix Project module to contain source root dir
- High Priority Dog Food Problems
	- Editor - find in files (background process?)
	- Editor - open include files
- Gui
	- Clicking on warnings doesn't display editor. Also change to double click?
	- Saving diagrams/files dialog button says Open instead of Save.
	- Doesn't load new include paths when reopening a project. (Close oovcde and restart)
	- Changing preferences should update drawings
- Source/project management
	- Make it clear which files must be saved to save project settings.
	  Gui Options don't get recreated if project is opened instead of newed.
	- Improve multitask backend, specify number of threads
		FindFirstChangeNotification/CDirectoryChangeWatcher , inotify
	- Load last project automatically, but allow opening other while parsing
- C++ parsing for drawings
	- BUG: Model objects not handled properly
		- namespace - std should not be a class
		- templates also, why so few std::vector<std::string>,
		  where is std::vector<ModelObject>
		- operator()
	- remove module ids from most/all elements, remove built in types
	- Multiple case statements without breaks appear nested.
	- Overloaded operations are not differentiated
	- function return type not listed
	- Some statements not parsed: else (currently faked), goto, default, return, etc.
	- May want to save complete type info (explicit const, *, &, etc) in the XMI files.
	- Should discard internal function names/operations?
	- Not finding template derived types for calls to functions. vector<type>.resize()
	- It may be nice if pkg-config was default for C++ settings for include paths.
	- Should save whether a class is defined in the XMI file to find correct source module
		for empty classes.
	- no visibility			(Use CXXAccessSpecifier, oovCppParser.cpp)
	- no packages
	- namespaces not shown
	- no nested classes
- Journal
	- Allow more copies of diagrams?
- Component Diagrams
	- Changing build settings/dependencies should update components
	- Show external project component dependencies, module dependencies
- Class Diagrams
	- BUG: Editor inherits from DebuggerListener, but not shown in Linux
	- BUG: forward class definitions mess up source line numbers
	- When class members are not shown, should be easy way to view members
	- FilePath not showing inheritance - templates?
	- Allow adding selected class to existing diagram - right click in class list
	- Add filter for class list
	- Show progress/cancel dlg for long operations, loading class list and large drawings
	- Set each class drawing preferences by whether component is the same.
	- Need either show classes that will be added, or undo, or multiple drawing copies
	- Fix const indicator to indicate target modification, not const pointers, etc.
	- Add go to operation (callbacks to journal)
	- Allow saving editable drawings (save name and position of all classes, options)
	- Templates have replicated operations for each file (new_allocator, vector)
	- Relation options should be per diagram.
	- reparenting preference options window messes up draw node options page.
	- Improve drawing, optimize graph for reduced line crosses
	- graph doesn't display types through typedefs (DiagramRect in DiagramGraph.h)
	- Show symbol key for diagrams
	- Add more diagram options (add depth=2, more generations)
	- Abort graph generation if interrupted somehow (click?)
	- Pointers/references/const not shown as part of types as text
	- Add class list context menu to allow adding single nodes/multiple nodes
		(two mouse buttons?, class properties?)
	- Show function return type relations basically already handled by body decls)
	- Could allow multiple selection to add relations, remove, properties
	- Could have grid for class placement, option for grid size
- Sequence Diagrams
	- Add show callers for operation
	- don't allow removing top call
	- View source only working on top level operation
	- Improve drawing of nested calls to same class
	- shorten exetremely long names
	- Diagram width not correct in svg diagrams for long operation names
	- Should try to find top level function in diagram, may not be first class.
	- Const calls aren't shown correctly for overloaded functions?
	- Add depth
	- Add option to display parameters.
	- Add option to wrap long class names for denser diagrams
	- Option for not replicating operation definitions if already displayed. New ... notation?
	- Calls through templates aren't displayed.
	- Allow rearranging class order?
- Analysis/Build System (Build not required for displaying diagrams)
	- split source of libraries into separate file for each function for release mode
	- BUG: Allow all components to have difference cpp/link args? -lnk-mwindows
		Add -lnk-mwindows if in Windows and using GTK? NO for command line apps
		Assign configs to components?
	- Separate oovcde-comptypes into user editable part (comp types), and file lists part
	- Replace oovcde-comps.txt in analysis directory with oovcde-extdir.txt file.
	- CMake file creator - Use analyze mode, read buildconfig(for crc), comptypes, incdeps
	- Changing package does not cause reanalysis (glib to gmodule)
	- Add -Wall, --analyzer
	- Cross compiling: http://www.cmake.org/Wiki/CMake_Cross_Compiling
	- date compares should not be for older, but even if date changed (in case of restore files)
	- Allow more project directory structures?
	- When a source file changes, or new file, the dependency list for it must be updated.
	  For now, delete out/bld directory for clean build.
	- Cache file times or monitor file changes
	- For linux, don't getPackage if not in available list.
- Editor
	- BUG: shift-f3 doesn't work (Linux?)
	- Home key doesn't scroll window
	- Prevent overwrite of another editor at the same time
	- GtkPlug, XEmbed
	- Gtk Plug/Socket, Wayland? "gvim -f --socketid %w '%s'"
	  http://lists.freedesktop.org/archives/wayland-devel/2012-February/002030.html
		gdk_set_allowed_backends("x11")
	- Embed vim examples:
		http://pages.cs.wisc.edu/~psilord/blog/18.html
		http://www.freehackers.org/VimIntegration
		http://vimdoc.sourceforge.net/htmldoc/netbeans.html
	- Creating new module created .tmp file
	- unindenting doesn't work well when tabs are in file
	- display column/character position
	- replace
	- find in files
	- error highlighting
	- open included file
	- find declaration/definition
	- refactor-rename
- Debugger (In editor)
	- Add method for selecting component to debug
	- When build starts, should stop debugger
	- Need to exit child program/stop debugger when editor quits
	- Add stack trace window/command
	- Add variable examination window
	- GDB docs are gdb.info, "The GDB/MI Interface"

- Future
	- static analysis: clang++ --analyze -I/home/ad/IP/Lib/src/  -Weverything
		 -pedantic -fshow-column -fcaret-diagnostics -fcolor-diagnostics
		 -ferror-limit=9999999 -fdiagnostics-show-category -std=c++98 file1.cpp
	- Add dynamic package diagrams using ldd/depends
	- select two classes and show shortest path
	- test facilitation (show number of paths/tests/complexity/duplication)
	- code smells - http://fagblogg.mesan.no/how-bad-is-smelly-code/
	- static analysis
	- abstract interpretation (show ranges of variables)
	- C Intermediate Language - http://www.cs.berkeley.edu/~necula/cil/cil016.html
	- packages: http://blog.ideabulbs.com/2010/11/how-to-create-your-own-debianubuntu.html
		http://ubuntuforums.org/showthread.php?t=910717
		http://unix.stackexchange.com/questions/30303/how-to-create-a-deb-file-manually

