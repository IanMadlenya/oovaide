
Features
--------
	See the web site for a list of features.

Explanations
------------
	- If operations aren't shown for classes, use -x c++ for Clang.
	- If float.h is or intrinics are missing, make sure clang dir is under exec dir (bin).
	- If classes aren't showing relation to std::vector<>, use "-x c++" for Clang.
	- Analysis will run again if there are include path errors
	  (changing switches or files will rerun)
	- If editor doesn't go to many defs, make sure include paths are correct
	  for analysis.


Missing Features
----------------
- General
	- margins in editor aren't displaying on linux?
	- editor idle crash in linux with text buffers and highlighting on startup and shutdown
	- remove dup journal code
	- remove dup graph code
	- graph selection icons should be gray if project isn't loaded.
	- Add new project icon?
	- reference design guidelines?
	  http://gernotklingler.com/blog/care-include-dependencies-cpp-keep-minimum/
	  http://stackoverflow.com/questions/1190597/open-source-tool-to-visualize-c-c-header-file-dependencies
	- combine class/portion tabs and add include diagrams to components
	- link to https://rawgit.com/animatedb/oovcde/master/web/articles/PortionDiagrams.html
	- BUG: Project Settings dialog should clear exclude directories when creating project.
	- BUG: New project with Simple attempts to delete .../bld-Analyze/.
		deleteDirs.push_back() wrong in OovBuilder
	- BUG: New proj with Shared example requires deleting analysis dir. UPDATE WEB SITE ALSO
		to include gtk/mingw (in proper order?)
	- BUG: Goto class doesn't change tab to class tab
	- Add UML notes to diagrams
	- Remove duplicate connections for getRelatedBodyVarClasses, etc.
	- create minimal code guidelines, ex:
	  "The Power of Ten – Rules for Developing Safety Critical Code"
	- in ModelObjects, getRelatedFuncParamClasses and getRelatedFuncInterfaceClasses
	  are the same?
- Gui
	- Add improved open recent files
	- Add toolbar buttons
	- Add External Directories button for Build Arguments dialog.
	- BUG: Sometimes in Linux, Stop Build, doesn't change state, but builder
	  is not running. Happens when resizing output window while building?
	- BUG: Sometimes the Add Package dialog doesn't hide/close.
		- window might be busy and is not responding (oovCommon/PackagesProcess?)
	- Clicking on warnings doesn't display editor.
	- Changing preferences should update drawings
- Source/project management
	- Make it clear which files must be saved to save project settings. (add clean)
	- Gui Options don't get recreated if project is opened instead of newed.
	- Add more multitasking: library symbols, loading projects
- Journal
	- Allow more copies of diagrams?
- Component Diagrams
	- BUG: Doing build resets component diagram
	- Changing build settings/dependencies should update components
- Zone Diagrams
	- BUG: component text offsets
	- allow zone diag map path to rename any arbitrary string? getMappedComponentName
	- Add zoom buttons, and zoom in based on cursor position
	- Show unused classes - for visible drawing?
	- Show related classes for a selected class
	- Use genetic algorithm to optimize for shortest dependencies in each module
- Class Diagrams/List
	- BUG: forward class definitions mess up source line numbers
	- Non-class types are not shown (even templated types)
	- Show parameter reference/pointer/const in methods
	- find way to reduce strlen: std::allocator, std::less, std::basic_string<char> etc.
	  see ComponentBuilder
	- When class members are not shown, should be easy way to view members
	- Set each class drawing preferences by whether component is the same.
	- Need either show classes that will be added, or undo, or multiple drawing copies
	- Add go to operation (callbacks to journal)
	- Allow saving editable drawings (save name and position of all classes, options)
	- Relation options should be per diagram.
	- reparenting preference options window messes up draw node options page.
	- Improve drawing, optimize graph for reduced line crosses
	- graph doesn't display types through typedefs (DiagramRect in DiagramGraph.h)
	- Add more diagram options (add depth=2, more generations)
	- Pointers/references/const not shown as part of types as text
	- Filter class list by component/dir
	- Allow zone selections to set filter on class list
	- Add class list context menu to allow adding single nodes/multiple nodes
		(two mouse buttons?, class properties?)
	- Allow multiple selection to add relations, remove, properties
	- Grid for class placement, option for grid size
	- Add filter for class list (GTK search feature exists)
- Portion Diagrams
	- Should show connections to this/super
	- Overloaded methods don't work
- Sequence Diagrams
	- Improve else/switch case
	- Show method parameters optionally
	- Find top level function in diagram, may not be first class.
	- View source only working on top level operation
	- Improve drawing of nested calls to same class
	- Add option to wrap long class names for denser diagrams
	- Diagram width not correct in svg diagrams for long operation names
	- Const calls aren't shown correctly for overloaded functions?
	- Add depth
	- Add option to display parameters.
	- Option for not replicating operation definitions if already displayed. New ... notation?
	- Calls through templates aren't displayed.
	- Allow rearranging class order?
- Analysis/Build System (Build not required for displaying diagrams)
	- Scan CMake files to find external pkg-config package dependencies
	- Missing MemberRefExpr for ClassGraph.UpdateNodeSizes, Saves .x instead of mPad.x
	- analysis - doesn't work on filenames with spaces
	- Complexity - could show class and module complexity
	- Coverage tool - fix switch/case fall throughs
	- Coverage tool - fix precompiled header before include oovcoverage.h
	- Coverage tool - filenames with underscore has stats, but not lines covered
	- Coverage tool - space before semicolon under if with no braces? -
		Search ZoneDiagram.cpp "mZoom /= 1.5 ;"
	- Analysis/component lists should ignore coverage directories
	- The oovcde-incdeps file should be regenerated if the build settings change
	- Multithreaded build output is not synchronized well enough
	- Generate a version error when the analysis dir has version problems
	- A static lib without source should not be on link lines
	- Fast loading XMI, parse func defs later (first store statement string)
	- Should include mingw-builds includes so that threading errors don't occur
	- oovcde-incdeps once got corrupted during debugging and slowed down and
	  prevented parsing.
	- BUG: Drive letters in path unable to write to bad filename.
	- Templates don't list operations
	- Typedefs not listed, define as inheritance? (oovCommon/Filepaths)
	- function return type not listed
	- Multiple case statements without breaks appear nested.
	- Some statements not parsed: else (currently faked), goto, default, return, etc.
	- Save complete type info (explicit const, *, &, etc) in the XMI files?
	- Change class def/decl description in XMI file to find correct source module
		for empty classes.
	- Build sometimes must have objects specified before or after other libs/objects
	- split source of libraries into separate file for each function for release mode
	- Component specific build args not used to recalculate crc's for rebuild
	- Changing package does not cause reanalysis (glib to gmodule)
	- Add -Wall, --analyzer
	- Cross compiling: http://www.cmake.org/Wiki/CMake_Cross_Compiling
	- date compares should not be for older, but even if date changed (in case of restore files)
	- When a source file changes, or new file, the dependency list is typically updated.
	  For now, if not, delete out/bld directory for clean build.
	- Cache file times or monitor file changes
	- For linux, don't getPackage if not in available list.
- CMaker
	- Add include directories that are not components
	- Allow debug/release and cross compile in cmake
		http://blog.beuc.net/posts/Cross-compiling_with_CMake/
		http://stackoverflow.com/questions/6476203/how-can-i-make-cmake-use-
			specific-compiler-and-flags-when-final-compilation-stag- C++ parsing
- Editor
	- find declaration/definition (also in other translation units)
	- Hover over tab should display full file path
	- tab name should change with file rename/save as.
	- editor doesn't handle two files with same name
	- Prevent file overwrite of another editor at the same time
	- GtkPlug, XEmbed, Wayland? "gvim -f --socketid %w '%s'"
	  http://lists.freedesktop.org/archives/wayland-devel/2012-February/002030.html
		gdk_set_allowed_backends("x11")
	- Embed vim examples:
		http://pages.cs.wisc.edu/~psilord/blog/18.html
		http://www.freehackers.org/VimIntegration
		http://vimdoc.sourceforge.net/htmldoc/netbeans.html
	- unindenting doesn't work well when tabs are in file
	- display column/character position
	- error highlighting
	- refactor-rename
- Debugger (In editor)
	- add remote debug (cross debug) gdbserver
		ssh <hostip> -l <username> "cd ~/yourdir && gdbserver :2345 ~/yourprogram"
		target machine: gdbserver hostip:2345 yourprogram
			or: gdbserver /dev/com1 baudrate? yourprogram
		host machine:
			start gdb as normal with yourprogram as arg
			(gdb) target remote <dev or target:2345>
	- need output window for running program
	- view variable results not parsed well for complex values
	- Adding variable to view should scroll to end
	- stopped, reason="watchpoint-trigger" doesn't enable Debug/Go
	- When view variables in call stack, show call stack location in editor?
	- Need to switch tabs and raise window when view source / hit breakpoint
	- Breakpoints not set in spawned executables?
	- Current exec position doesn't go away/update at some times
	- display variable doesn't work (wrong page?)
	- Debug data could display graphs, unicode, etc.
	- Debug data could be bound to functions in code
	- Could execute functions in code with parameters
	- remove breakpoint doesn't work
	- Control window requires that entering commands must enter on blank line
	- When build starts, should stop debugger
	- GDB docs are gdb.info, "The GDB/MI Interface"

- Future
	- include mingw include files in package?
	- Statistics / Quality measurement
		amount of const, number of raw pointers, minimal use of new/delete/malloc/...
		interface complexity, amount of encapsulation, size of exposed interface
			amount of state - even in called classes
		member functions called in any order?
		number of interface classes vs hidden classes in a module
		child classes that don't use parent class data/functions
		class - number of classes related to a class
		class - complexity of a class
		number of unused classes, methods, etc.
	- more component stats - lines, classes, etc.
	- Cohesion in a class (how methods use attributes)
		http://www.bth.se/fou/cuppsats.nsf/all/86e880ce9d0b94aec1256f0e004778e5/
			$file/thesis_report.pdf
	- Add design quality based on function inter-relations / call-tree?
		http://www.graphviz.org/content/tips-usefully-visualizing-non-trivial-graphs
		https://en.wikipedia.org/wiki/Design_structure_matrix
	- Add timing diagram that can show state changes/variables over time from method calls
	- Add find methods that use class variable
	- Emotional connections: Similarity of modules by which functions are used
		https://en.wikipedia.org/wiki/Circle_graph, group by directory
		http://blog.ivank.net/force-based-graph-drawing-in-as3.html
		https://en.wikipedia.org/wiki/Force-directed_graph_drawing, kamada-kawai boost.
		http://stackoverflow.com/questions/6563488/jung-graphs-vertex-similarity
		http://www.theparisreview.org/blog/2015/02/04/man-in-hole/
	- Refactoring functions
		- Display unused public functions of a class
		- Dump ASCII public functions
	- static analysis: clang++ --analyze -I/home/ad/IP/Lib/src/  -Weverything
		 -pedantic -fshow-column -fcaret-diagnostics -fcolor-diagnostics
		 -ferror-limit=9999999 -fdiagnostics-show-category -std=c++98 file1.cpp
	- proofs - Coq, TLA+
		http://www.cs.unh.edu/~charpov/Teaching/TLA/
	- Add dynamic package diagrams using ldd/depends
	- select two classes and show shortest path
	- test facilitation (show number of paths/tests/complexity/duplication)
	- code smells - http://fagblogg.mesan.no/how-bad-is-smelly-code/
	- static analysis
	- abstract interpretation (show ranges of variables)
	- C Intermediate Language - http://www.cs.berkeley.edu/~necula/cil/cil016.html
	- packages: http://blog.ideabulbs.com/2010/11/how-to-create-your-own-debianubuntu.html
		fpm deb/rpm
		biicode
		http://nsis.sourceforge.net/Main_Page
		https://github.com/jordansissel/fpm, http://www.exemsi.com/, Wix(.Net only)
		http://ubuntuforums.org/showthread.php?t=910717
		http://unix.stackexchange.com/questions/30303/how-to-create-a-deb-file-manually

